{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Keyboard-appearance","level":2,"type":"heading","text":"Keyboard appearance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit has a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance"},{"type":"text","text":" protocol that describes styles and appearances for different parts of a keyboard."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Many views in the library use an appearance if they have to be able to generate different styles. This is true for e.g. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"type":"text","text":", which renders many different components and buttons. Views that only need to be styled in a certain way can just ask for a fixed style instead of an appearance."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance"},{"type":"text","text":" as the keyboard extension is started, then apply this instance to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardAppearance"},{"type":"text","text":". This instance will then be used by default to determine how your appearance-based views will look."}]},{"anchor":"How-to-create-a-custom-appearance","level":2,"type":"heading","text":"How to create a custom appearance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to change the style of some buttons or callouts or change the the text or image to use for buttons, you can implement a custom keyboard appearance."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom appearance by either inheriting and customizing the standard class (which gives you a lot of functionality for free) or by creating a new implementation from scratch. When you’re implementation is ready, just replace the controller service with your own implementation to make the library use it instead."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, here is a custom appearance that extends "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance"},{"type":"text","text":" and makes all input actions and callouts red:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardAppearance: StandardKeyboardAppearance {","    ","    override func actionCalloutStyle() -> ActionCalloutStyle {","        let style = super.actionCalloutStyle()","        style.callout.backgroundColor = .red","        return style","    }","","    override func buttonStyle(","        for action: KeyboardAction,","        isPressed: Bool) -> KeyboardButtonStyle {","        let style = super.buttonStyle(for: action, isPressed: isPressed)","        if !action.isInputAction { return style }","        style.backgroundColor = .red","        return style","    }","","    override func inputCalloutStyle() -> InputCalloutStyle {","        let style = super.inputCalloutStyle()","        style.callout.backgroundColor = .red","        return style","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this implementation instead of the standard one, just replace the standard instance like this:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardViewController: KeyboardInputViewController {","","    override func viewDidLoad() {","        keyboardAppearance = MyKeyboardAppearance()","        super.viewDidLoad()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make KeyboardKit use your custom implementation everywhere instead of the standard one."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/understanding-keyboard-appearance"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Appearance","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance model and how to use it."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Understanding Keyboard Appearance","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Going-Further","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Actions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Feedback","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Input-Sets","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Layout","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete"],"generated":true}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardAppearance":{"role":"symbol","title":"keyboardAppearance","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardAppearance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardAppearance","preciseIdentifier":"s:11KeyboardKit0A10AppearanceP"}],"abstract":[{"type":"text","text":"This appearance can be used to customize the keyboard’s"},{"type":"text","text":" "},{"type":"text","text":"design, such as its colors, fonts etc."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardAppearance","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardappearance"},"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"role":"article","title":"Getting started","abstract":[{"type":"text","text":"This article discusses how to install KeyboardKit and get started using it in your app."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/getting-started"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardAppearance":{"role":"symbol","title":"StandardKeyboardAppearance","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardKeyboardAppearance"}],"abstract":[{"type":"text","text":"This standard appearance returns styles that replicates the"},{"type":"text","text":" "},{"type":"text","text":"look of a native system keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardAppearance","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardAppearance"}],"url":"\/documentation\/keyboardkit\/standardkeyboardappearance"},"doc://KeyboardKit/documentation/KeyboardKit/Going-Further":{"role":"article","title":"Going Further","abstract":[{"type":"text","text":"This article discusses how to configure KeyboardKit and add your own logic to the mix."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Going-Further","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/going-further"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Localization":{"role":"article","title":"Understanding Keyboard Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-localization"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Actions":{"role":"article","title":"Understanding Keyboard Actions","abstract":[{"type":"text","text":"This article describes keyboard actions and how to use action handlers."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Actions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-actions"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Autocomplete":{"role":"article","title":"Understanding Autocomplete","abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-autocomplete"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Input-Sets":{"role":"article","title":"Understanding Keyboard Input Sets","abstract":[{"type":"text","text":"This article describes the KeyboardKit input set concept and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Input-Sets","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-input-sets"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardAppearance":{"role":"symbol","title":"KeyboardAppearance","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardAppearance"}],"abstract":[{"type":"text","text":"This protocol can be implemented by classes that can define"},{"type":"text","text":" "},{"type":"text","text":"styles and appearances for different parts of a keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardAppearance"}],"url":"\/documentation\/keyboardkit\/keyboardappearance"},"doc://KeyboardKit/documentation/KeyboardKit/SystemKeyboard":{"role":"symbol","title":"SystemKeyboard","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemKeyboard"}],"abstract":[{"type":"text","text":"This view mimics native iOS system keyboards, like standard"},{"type":"text","text":" "},{"type":"text","text":"alphabetic, numeric and symbolic system keyboards."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemKeyboard"}],"url":"\/documentation\/keyboardkit\/systemkeyboard"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Feedback":{"role":"article","title":"Understanding Keyboard Feedback","abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Feedback","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-feedback"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Layout":{"role":"article","title":"Understanding Keyboard Layouts","abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout concept and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Layout","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-layout"}}}