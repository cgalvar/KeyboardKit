{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Input-set","level":2,"type":"heading","text":"Input set"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In KeyboardKit, an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSet"},{"type":"text","text":" defines the input keys on a keyboard. The keys can then be used to create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayout"},{"type":"text","text":", which defines the full set of keys including system keys."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Input sets and keyboard layouts are central components when creating a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"type":"text","text":", where flexibility and configurability is important features. If you want to create a custom keyboard, you don’t have to use these concepts."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most flexible way to generate an input set is to use an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetProvider"},{"type":"text","text":"."}]},{"anchor":"Input-set-provider","level":2,"type":"heading","text":"Input set provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit has a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetProvider"},{"type":"text","text":" protocol that can be implemented by any classes that can be used to provide "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSet"},{"type":"text","text":" values for keyboard layouts."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardInputSetProvider"},{"type":"text","text":" when the keyboard extension is started, then apply that instance to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/inputSetProvider"},{"type":"text","text":" and use this instance to generate input sets."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit also has an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/EnglishInputSetProvider"},{"type":"text","text":" that defines the alphabetic, numeric and symbolic inputs for U.S. English."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit Pro can be used to unlock an input set provider for each "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale"},{"type":"text","text":". This means that you can create a completely localized "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"type":"text","text":" for all available locales with just a single line of code."}]},{"anchor":"Device-specific-input-set-providers","level":2,"type":"heading","text":"Device specific input set providers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When creating system keyboards, the input set can vary depending on the device type."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit has a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/DeviceSpecificInputSetProvider"},{"type":"text","text":" protocol that you can implement to get access to convenient utilities for creating device-specific input sets."}]},{"anchor":"How-to-create-a-custom-input-set-provider","level":2,"type":"heading","text":"How to create a custom input set provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you don’t have a KeyboardKit Pro license, you can create a custom input set provider."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom input set provider by either inheriting and customizing the standard class (which gives you a lot of functionality for free) or by creating a new implementation from scratch. When you’re implementation is ready, just replace the controller service with your own implementation to make the library use it instead."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, here is a custom provider that extends "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/EnglishInputSetProvider"},{"type":"text","text":" and replaces the dollar sign with a Russian ruble sign (₽) (…because, why not?):"}]},{"type":"codeListing","syntax":"swift","code":["class MyInputSetProvider: EnglishInputSetProvider {","    ","    override var numericInputSet: NumericInputSet {","        ","        public init() {","            super.init(numericCurrency: \"₽\", symbolicCurrency: \"$\")","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this implementation instead of the standard one, just replace the standard instance like this:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardViewController: KeyboardInputViewController {","","    override func viewDidLoad() {","        inputSetProvider = MyInputSetProvider()","        super.viewDidLoad()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make KeyboardKit use your custom implementation everywhere instead of the standard one."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/understanding-keyboard-input-sets"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Input-Sets","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes the KeyboardKit input set concept and how to use it."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Understanding Keyboard Input Sets","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Going-Further","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Actions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Appearance","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Feedback","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Layout","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete"],"generated":true}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/InputSetProvider":{"role":"symbol","title":"InputSetProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputSetProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any classes that can be"},{"type":"text","text":" "},{"type":"text","text":"used to provide "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSet"},{"type":"text","text":" values for keyboard layouts."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InputSetProvider"}],"url":"\/documentation\/keyboardkit\/inputsetprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Appearance":{"role":"article","title":"Understanding Keyboard Appearance","abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Appearance","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-appearance"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/Going-Further":{"role":"article","title":"Going Further","abstract":[{"type":"text","text":"This article discusses how to configure KeyboardKit and add your own logic to the mix."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Going-Further","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/going-further"},"doc://KeyboardKit/documentation/KeyboardKit/DeviceSpecificInputSetProvider":{"role":"symbol","title":"DeviceSpecificInputSetProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeviceSpecificInputSetProvider"}],"abstract":[{"type":"text","text":"This protocol extends "},{"type":"codeVoice","code":"InputSetProvider"},{"type":"text","text":" and can be used by"},{"type":"text","text":" "},{"type":"text","text":"any provider that bases its input set on the current device."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/DeviceSpecificInputSetProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeviceSpecificInputSetProvider"}],"url":"\/documentation\/keyboardkit\/devicespecificinputsetprovider"},"doc://KeyboardKit/documentation/KeyboardKit/StandardInputSetProvider":{"role":"symbol","title":"StandardInputSetProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardInputSetProvider"}],"abstract":[{"type":"text","text":"This input set provider is initialized with a collection of"},{"type":"text","text":" "},{"type":"text","text":"localized providers and will use the provider with the same"},{"type":"text","text":" "},{"type":"text","text":"locale as the context."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardInputSetProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardInputSetProvider"}],"url":"\/documentation\/keyboardkit\/standardinputsetprovider"},"doc://KeyboardKit/documentation/KeyboardKit/InputSet":{"role":"symbol","title":"InputSet","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputSet"}],"abstract":[{"type":"text","text":"An input set defines the input keys on a keyboard. The keys"},{"type":"text","text":" "},{"type":"text","text":"can then be used to create a keyboard layout, which defines"},{"type":"text","text":" "},{"type":"text","text":"the full set of keys, including the surrounding system keys."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InputSet"}],"url":"\/documentation\/keyboardkit\/inputset"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardLocale":{"role":"symbol","title":"KeyboardLocale","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardLocale"}],"abstract":[{"type":"text","text":"This enum contains KeyboardKit-supported locales."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardLocale"}],"url":"\/documentation\/keyboardkit\/keyboardlocale"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Autocomplete":{"role":"article","title":"Understanding Autocomplete","abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-autocomplete"},"doc://KeyboardKit/documentation/KeyboardKit/EnglishInputSetProvider":{"role":"symbol","title":"EnglishInputSetProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnglishInputSetProvider"}],"abstract":[{"type":"text","text":"This input set provider provides English input sets."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/EnglishInputSetProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EnglishInputSetProvider"}],"url":"\/documentation\/keyboardkit\/englishinputsetprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Layout":{"role":"article","title":"Understanding Keyboard Layouts","abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout concept and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Layout","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-layout"},"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"role":"article","title":"Getting started","abstract":[{"type":"text","text":"This article discusses how to install KeyboardKit and get started using it in your app."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/getting-started"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/inputSetProvider":{"role":"symbol","title":"inputSetProvider","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inputSetProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InputSetProvider","preciseIdentifier":"s:11KeyboardKit16InputSetProviderP"}],"abstract":[{"type":"text","text":"This provider is used to get an input set, that is used"},{"type":"text","text":" "},{"type":"text","text":"to generate a complete keyboard layout."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/inputSetProvider","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/inputsetprovider"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardLayout":{"role":"symbol","title":"KeyboardLayout","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardLayout"}],"abstract":[{"type":"text","text":"A keyboard layout defines all available keyboard actions on"},{"type":"text","text":" "},{"type":"text","text":"a keyboard, as well as their size."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardLayout"}],"url":"\/documentation\/keyboardkit\/keyboardlayout"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Localization":{"role":"article","title":"Understanding Keyboard Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-localization"},"doc://KeyboardKit/documentation/KeyboardKit/SystemKeyboard":{"role":"symbol","title":"SystemKeyboard","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemKeyboard"}],"abstract":[{"type":"text","text":"This view mimics native iOS system keyboards, like standard"},{"type":"text","text":" "},{"type":"text","text":"alphabetic, numeric and symbolic system keyboards."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemKeyboard"}],"url":"\/documentation\/keyboardkit\/systemkeyboard"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Actions":{"role":"article","title":"Understanding Keyboard Actions","abstract":[{"type":"text","text":"This article describes keyboard actions and how to use action handlers."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Actions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-actions"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Feedback":{"role":"article","title":"Understanding Keyboard Feedback","abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Feedback","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-feedback"}}}