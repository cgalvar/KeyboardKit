{"seeAlsoSections":[{"title":"Keyboard","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardType","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledState","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardHostingController"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardCasing"}],"title":"KeyboardCasing","roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","externalID":"s:11KeyboardKit0A6CasingO","modules":[{"name":"KeyboardKit"}],"navigatorTitle":[{"kind":"identifier","text":"KeyboardCasing"}]},"abstract":[{"type":"text","text":"This enum lists the various shift states a keyboard can use."}],"sections":[],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/KeyboardKit\/Se","doc:\/\/KeyboardKit\/SE","doc:\/\/KeyboardKit\/SQ","doc:\/\/KeyboardKit\/SH","doc:\/\/KeyboardKit\/s12IdentifiableP","doc:\/\/KeyboardKit\/SY"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/auto","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/capsLocked","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/lowercased","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/uppercased"]},{"title":"Initializers","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/isLowercased","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/isUppercased","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/standardButtonImage"]},{"title":"Default Implementations","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/Equatable-Implementations","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/Identifiable-Implementations","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/RawRepresentable-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/keyboardkit\/keyboardcasing"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardCasing"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that "},{"type":"codeVoice","code":"neutral"},{"type":"text","text":" will be removed in KeyboardKit 5, but I"},{"type":"text","text":" "},{"type":"text","text":"have chosen to not mark it as such, since that would create"},{"type":"text","text":" "},{"type":"text","text":"a bunch of warnings within the framework."}]}]}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/KeyboardContext":{"role":"symbol","title":"KeyboardContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardContext"}],"abstract":[{"type":"text","text":"This class provides keyboard extensions with contextual and"},{"type":"text","text":" "},{"type":"text","text":"observable information. It is a central part of KeyboardKit"},{"type":"text","text":" "},{"type":"text","text":"and to create adaptive keyboards."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardContext"}],"url":"\/documentation\/keyboardkit\/keyboardcontext"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/lowercased":{"role":"symbol","title":"KeyboardCasing.lowercased","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"lowercased"}],"abstract":[{"type":"codeVoice","code":".lowercased"},{"type":"text","text":" should follow the "},{"type":"codeVoice","code":"autocapitalization"},{"type":"text","text":" of"},{"type":"text","text":" "},{"type":"text","text":"the text document proxy."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/lowercased","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/lowercased"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/isUppercased":{"role":"symbol","title":"isUppercased","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isUppercased"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether or not the casing represents an uppercased case."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/isUppercased","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/isuppercased"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardType":{"role":"symbol","title":"KeyboardType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardType"}],"abstract":[{"type":"text","text":"This enum contains all keyboard types that can currently be"},{"type":"text","text":" "},{"type":"text","text":"bound to the "},{"type":"codeVoice","code":"KeyboardAction"},{"type":"text","text":" switch keyboard action."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardType"}],"url":"\/documentation\/keyboardkit\/keyboardtype"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledState":{"role":"symbol","title":"KeyboardEnabledState","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledState"}],"abstract":[{"type":"text","text":"This state class implements "},{"type":"codeVoice","code":"KeyboardEnabledStateInspector"},{"type":"text","text":" "},{"type":"text","text":"by keeping a published "},{"type":"codeVoice","code":"isKeyboardEnabled"},{"type":"text","text":" in sync with the"},{"type":"text","text":" "},{"type":"text","text":"state of the associated keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardEnabledState"}],"url":"\/documentation\/keyboardkit\/keyboardenabledstate"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/equatable-implementations"},"doc://KeyboardKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/KeyboardKit\/Se"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector":{"role":"symbol","title":"KeyboardEnabledStateInspector","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledStateInspector"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any class or struct and"},{"type":"text","text":" "},{"type":"text","text":"provides its implementations with state-specific extensions."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardEnabledStateInspector"}],"url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector"},"doc://KeyboardKit/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/KeyboardKit\/SE"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/auto":{"role":"symbol","title":"KeyboardCasing.auto","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"auto"}],"abstract":[{"type":"codeVoice","code":".auto"},{"type":"text","text":" is a transient state, that means that it should"},{"type":"text","text":" "},{"type":"text","text":"automatically be replaced by another case."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/auto","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/auto"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/standardButtonImage":{"role":"symbol","title":"standardButtonImage","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"standardButtonImage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Image","preciseIdentifier":"s:7SwiftUI5ImageV"}],"abstract":[{"type":"text","text":"The casingâ€™s standard button image."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/standardButtonImage","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/standardbuttonimage"},"doc://KeyboardKit/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/KeyboardKit\/SY"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/isLowercased":{"role":"symbol","title":"isLowercased","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isLowercased"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether or not the casing represents a lowercased case."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/isLowercased","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/islowercased"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing":{"role":"symbol","title":"KeyboardCasing","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardCasing"}],"abstract":[{"type":"text","text":"This enum lists the various shift states a keyboard can use."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardCasing"}],"url":"\/documentation\/keyboardkit\/keyboardcasing"},"doc://KeyboardKit/s12IdentifiableP":{"type":"unresolvable","title":"Swift.Identifiable","identifier":"doc:\/\/KeyboardKit\/s12IdentifiableP"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/RawRepresentable-Implementations":{"role":"collectionGroup","title":"RawRepresentable Implementations","abstract":[],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/RawRepresentable-Implementations","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/rawrepresentable-implementations"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/capsLocked":{"role":"symbol","title":"KeyboardCasing.capsLocked","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"capsLocked"}],"abstract":[{"type":"codeVoice","code":".capsLocked"},{"type":"text","text":" is an uppercased state that should not be"},{"type":"text","text":" "},{"type":"text","text":"automatically adjusted when typing."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/capsLocked","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/capslocked"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/init(rawValue:)":{"role":"symbol","title":"init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/init(rawValue:)","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/init(rawvalue:)"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController":{"role":"symbol","title":"KeyboardInputViewController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardInputViewController"}],"abstract":[{"type":"text","text":"This class extends "},{"type":"codeVoice","code":"UIInputViewController"},{"type":"text","text":" with KeyboardKit"},{"type":"text","text":" "},{"type":"text","text":"specific functionality."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardInputViewController"}],"url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller"},"doc://KeyboardKit/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/KeyboardKit\/SH"},"doc://KeyboardKit/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/KeyboardKit\/SQ"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/uppercased":{"role":"symbol","title":"KeyboardCasing.uppercased","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"uppercased"}],"abstract":[{"type":"codeVoice","code":".uppercased"},{"type":"text","text":" should follow the "},{"type":"codeVoice","code":"autocapitalization"},{"type":"text","text":" of"},{"type":"text","text":" "},{"type":"text","text":"the text document proxy."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/uppercased","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/uppercased"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing/Identifiable-Implementations":{"role":"collectionGroup","title":"Identifiable Implementations","abstract":[],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing\/Identifiable-Implementations","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/keyboardcasing\/identifiable-implementations"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardHostingController":{"role":"symbol","title":"KeyboardHostingController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardHostingController"}],"abstract":[{"type":"text","text":"This controller can be used to add any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":"-based view"},{"type":"text","text":" "},{"type":"text","text":"to a "},{"type":"codeVoice","code":"KeyboardInputViewController"},{"type":"text","text":"."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardHostingController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardHostingController"}],"url":"\/documentation\/keyboardkit\/keyboardhostingcontroller"}}}