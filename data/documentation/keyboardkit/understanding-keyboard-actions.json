{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Keyboard-actions","level":2,"type":"heading","text":"Keyboard actions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit has a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAction"},{"type":"text","text":" enum that defines keyboard-specific actions that correspond to actions that can be found on various keyboards. Keyboard actions are fundamental building-blocks in the library."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Keyboard actions can be bound to buttons and triggered with a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardActionHandler"},{"type":"text","text":". Keyboard actions are also used to define keyboard layouts and provide a declarative way to express a layout without having to specify exactly how your actions will be executed."}]},{"anchor":"Keyboard-action-handler","level":2,"type":"heading","text":"Keyboard action handler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit has a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardActionHandler"},{"type":"text","text":" protocol that describes how to handle actions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Many views in the library use actions and an action handler to give you a flexible setup, where you can provide actions without having to specify how they are to be handled."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can trigger keyboard actions programatically by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardActionHandler\/handle(_:on:)"},{"type":"text","text":". This is convenient when you must trigger actions from other parts of your keyboard."}]},{"type":"codeListing","syntax":"swift","code":["class MyClass {","","    init(actionHandler: KeyboardActionHandler) {","        self.actionHandler = actionHandler","    }","","    private let actionHandler: KeyboardActionHandler","","    func stopEditingText() {","        actionHandler.handle(.tap, on: .dismissKeyboard)","    } ","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardActionHandler"},{"type":"text","text":" instance when the keyboard extension is started, then apply it to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardActionHandler"},{"type":"text","text":". It will then use this instance by default to handle actions."}]},{"anchor":"How-to-create-a-custom-handler","level":2,"type":"heading","text":"How to create a custom handler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Many keyboard actions have standard behaviors, while others don’t and require custom handling. To customize how actions are handled, you can implement a custom action handler."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom action handler by either inheriting and customizing the standard class (which gives you a lot of functionality for free) or by creating a new implementation from scratch. When you’re implementation is ready, just replace the controller service with your own implementation to make the library use it instead."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, here is a custom action handler that extends "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardActionHandler"},{"type":"text","text":" with the capabilities to copy and save images:"}]},{"type":"codeListing","syntax":"swift","code":["class MyActionHandler: StandardKeyboardActionHandler {","    ","    public init(inputViewController: KeyboardInputViewController) {","        super.init(inputViewController: inputViewController)","    }","    ","    ","    \/\/ MARK: - Overrides","    ","    override func action(for gesture: KeyboardGesture, on action: KeyboardAction) -> KeyboardAction.GestureAction? {","        let standard = super.action(for: gesture, on: action)","        switch gesture {","        case .longPress: return longPressAction(for: action) ?? standard","        case .tap: return tapAction(for: action) ?? standard","        default: return standard","        }","    }","    ","    ","    \/\/ MARK: - Custom actions","    ","    func longPressAction(for action: KeyboardAction) -> KeyboardAction.GestureAction? {","        switch action {","        case .image(_, _, let imageName): return { [weak self] _ in self?.saveImage(named: imageName) }","        default: return nil","        }","    }","    ","    func tapAction(for action: KeyboardAction) -> KeyboardAction.GestureAction? {","        switch action {","        case .image(_, _, let imageName): return { [weak self] _ in self?.copyImage(named: imageName) }","        default: return nil","        }","    }","    ","    ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this implementation instead of the standard one, just replace the standard instance like this:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardViewController: KeyboardInputViewController {","","    override func viewDidLoad() {","        keyboardActionHandler = MyActionHandler(inputViewController: self)","        super.viewDidLoad()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make KeyboardKit use your custom implementation everywhere instead of the standard one."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/understanding-keyboard-actions"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Actions","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes keyboard actions and how to use action handlers."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Understanding Keyboard Actions","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Going-Further","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Appearance","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Feedback","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Input-Sets","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Layout","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete"],"generated":true}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Input-Sets":{"role":"article","title":"Understanding Keyboard Input Sets","abstract":[{"type":"text","text":"This article describes the KeyboardKit input set concept and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Input-Sets","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-input-sets"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardActionHandler/handle(_:on:)":{"role":"symbol","title":"handle(_:on:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"KeyboardGesture","preciseIdentifier":"s:11KeyboardKit0A7GestureO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardAction","preciseIdentifier":"s:11KeyboardKit0A6ActionO"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Handle a certain "},{"type":"codeVoice","code":"gesture"},{"type":"text","text":" on a certain "},{"type":"codeVoice","code":"action"},{"type":"text","text":"."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardActionHandler\/handle(_:on:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/keyboardkit\/keyboardactionhandler\/handle(_:on:)"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardActionHandler":{"role":"symbol","title":"StandardKeyboardActionHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardKeyboardActionHandler"}],"abstract":[{"type":"text","text":"This standard keyboard action handler is used by default by"},{"type":"text","text":" "},{"type":"text","text":"KeyboardKit and provides a standard way of handling actions."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardActionHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardActionHandler"}],"url":"\/documentation\/keyboardkit\/standardkeyboardactionhandler"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Autocomplete":{"role":"article","title":"Understanding Autocomplete","abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-autocomplete"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Layout":{"role":"article","title":"Understanding Keyboard Layouts","abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout concept and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Layout","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-layout"},"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"role":"article","title":"Getting started","abstract":[{"type":"text","text":"This article discusses how to install KeyboardKit and get started using it in your app."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/getting-started"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Appearance":{"role":"article","title":"Understanding Keyboard Appearance","abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Appearance","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-appearance"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardActionHandler":{"role":"symbol","title":"keyboardActionHandler","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardActionHandler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardActionHandler","preciseIdentifier":"s:11KeyboardKit0A13ActionHandlerP"}],"abstract":[{"type":"text","text":"This action handler is used to handle actions that will"},{"type":"text","text":" "},{"type":"text","text":"be triggered when the keyboard is being."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardActionHandler","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardactionhandler"},"doc://KeyboardKit/documentation/KeyboardKit/Going-Further":{"role":"article","title":"Going Further","abstract":[{"type":"text","text":"This article discusses how to configure KeyboardKit and add your own logic to the mix."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Going-Further","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/going-further"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Localization":{"role":"article","title":"Understanding Keyboard Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-localization"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardActionHandler":{"role":"symbol","title":"KeyboardActionHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardActionHandler"}],"abstract":[{"type":"text","text":"This protocol can be implemented by classes that can handle"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAction"},{"type":"text","text":" events."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardActionHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardActionHandler"}],"url":"\/documentation\/keyboardkit\/keyboardactionhandler"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Feedback":{"role":"article","title":"Understanding Keyboard Feedback","abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Feedback","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-feedback"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardAction":{"role":"symbol","title":"KeyboardAction","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardAction"}],"abstract":[{"type":"text","text":"This enum defines keyboard-specific actions that correspond"},{"type":"text","text":" "},{"type":"text","text":"to actions that can be found on various keyboards. Keyboard"},{"type":"text","text":" "},{"type":"text","text":"actions are fundamental building-blocks in the library."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardAction"}],"url":"\/documentation\/keyboardkit\/keyboardaction"}}}