{"seeAlsoSections":[{"title":"Keyboard","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardType","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledState","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardHostingController"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledStateInspector"}],"title":"KeyboardEnabledStateInspector","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:11KeyboardKit0A21EnabledStateInspectorP","modules":[{"name":"KeyboardKit"}],"navigatorTitle":[{"kind":"identifier","text":"KeyboardEnabledStateInspector"}]},"abstract":[{"type":"text","text":"This protocol can be implemented by any class or struct and"},{"type":"text","text":" "},{"type":"text","text":"provides its implementations with state-specific extensions."}],"sections":[],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledState"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isFullAccessEnabled"]},{"title":"Instance Methods","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isKeyboardCurrentlyActive(withBundleId:)","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isKeyboardEnabled(withBundleId:defaults:)"]}],"variants":[{"paths":["\/documentation\/keyboardkit\/keyboardenabledstateinspector"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledStateInspector"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, the easiest way to observe the enabled state is to"},{"type":"text","text":" "},{"type":"text","text":"just create an "},{"type":"codeVoice","code":"KeyboardEnabledState"},{"type":"text","text":" instance."}]}]}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector/isKeyboardCurrentlyActive(withBundleId:)":{"role":"symbol","title":"isKeyboardCurrentlyActive(withBundleId:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isKeyboardCurrentlyActive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withBundleId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether or not the keyboard extension with the provided"},{"type":"text","text":" "},{"type":"codeVoice","code":"bundleId"},{"type":"text","text":" is currently being used in a text field."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isKeyboardCurrentlyActive(withBundleId:)","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector\/iskeyboardcurrentlyactive(withbundleid:)"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector/isKeyboardEnabled(withBundleId:defaults:)":{"role":"symbol","title":"isKeyboardEnabled(withBundleId:defaults:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isKeyboardEnabled"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withBundleId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"defaults"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UserDefaults","preciseIdentifier":"c:objc(cs)NSUserDefaults"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether or not the keyboard extension with the provided"},{"type":"text","text":" "},{"type":"codeVoice","code":"bundleId"},{"type":"text","text":" has been enabled in System Settings."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isKeyboardEnabled(withBundleId:defaults:)","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector\/iskeyboardenabled(withbundleid:defaults:)"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController":{"role":"symbol","title":"KeyboardInputViewController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardInputViewController"}],"abstract":[{"type":"text","text":"This class extends "},{"type":"codeVoice","code":"UIInputViewController"},{"type":"text","text":" with KeyboardKit"},{"type":"text","text":" "},{"type":"text","text":"specific functionality."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardInputViewController"}],"url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector":{"role":"symbol","title":"KeyboardEnabledStateInspector","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledStateInspector"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any class or struct and"},{"type":"text","text":" "},{"type":"text","text":"provides its implementations with state-specific extensions."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardEnabledStateInspector"}],"url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledState":{"role":"symbol","title":"KeyboardEnabledState","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardEnabledState"}],"abstract":[{"type":"text","text":"This state class implements "},{"type":"codeVoice","code":"KeyboardEnabledStateInspector"},{"type":"text","text":" "},{"type":"text","text":"by keeping a published "},{"type":"codeVoice","code":"isKeyboardEnabled"},{"type":"text","text":" in sync with the"},{"type":"text","text":" "},{"type":"text","text":"state of the associated keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardEnabledState"}],"url":"\/documentation\/keyboardkit\/keyboardenabledstate"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardCasing":{"role":"symbol","title":"KeyboardCasing","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardCasing"}],"abstract":[{"type":"text","text":"This enum lists the various shift states a keyboard can use."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardCasing","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardCasing"}],"url":"\/documentation\/keyboardkit\/keyboardcasing"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardHostingController":{"role":"symbol","title":"KeyboardHostingController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardHostingController"}],"abstract":[{"type":"text","text":"This controller can be used to add any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":"-based view"},{"type":"text","text":" "},{"type":"text","text":"to a "},{"type":"codeVoice","code":"KeyboardInputViewController"},{"type":"text","text":"."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardHostingController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardHostingController"}],"url":"\/documentation\/keyboardkit\/keyboardhostingcontroller"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardType":{"role":"symbol","title":"KeyboardType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardType"}],"abstract":[{"type":"text","text":"This enum contains all keyboard types that can currently be"},{"type":"text","text":" "},{"type":"text","text":"bound to the "},{"type":"codeVoice","code":"KeyboardAction"},{"type":"text","text":" switch keyboard action."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardType"}],"url":"\/documentation\/keyboardkit\/keyboardtype"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardContext":{"role":"symbol","title":"KeyboardContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardContext"}],"abstract":[{"type":"text","text":"This class provides keyboard extensions with contextual and"},{"type":"text","text":" "},{"type":"text","text":"observable information. It is a central part of KeyboardKit"},{"type":"text","text":" "},{"type":"text","text":"and to create adaptive keyboards."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardContext"}],"url":"\/documentation\/keyboardkit\/keyboardcontext"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardEnabledStateInspector/isFullAccessEnabled":{"role":"symbol","title":"isFullAccessEnabled","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isFullAccessEnabled"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether or not the app has been given full access"},{"type":"text","text":" "},{"type":"text","text":"in System Settings."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardEnabledStateInspector\/isFullAccessEnabled","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardenabledstateinspector\/isfullaccessenabled"}}}