{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Keyboard-feedback","level":2,"type":"heading","text":"Keyboard feedback"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit has a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance"},{"type":"text","text":" protocol that can be used to trigger audio and haptic feedback to the user."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Various parts of the library use a feedback handler to give audio and haptic feedback to the user, when it’s applicable. For instance, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardActionHandler"},{"type":"text","text":" uses one to give feedback when it performs keyboard actions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardFeedbackHandler"},{"type":"text","text":" instance when the keyboard extension is started, then apply it to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardFeedbackHandler"},{"type":"text","text":". It will then use this instance by default to give feedback."}]},{"anchor":"Keyboard-feedback-settings","level":2,"type":"heading","text":"Keyboard feedback settings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit has an observable "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardFeedbackSettings"},{"type":"text","text":" class that can be used to easily configure the the audio and haptic feedback that should be given for various keyboard actions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will create an observable setting instance when the keyboard extension is started, then apply this instance to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardFeedbackSettings"},{"type":"text","text":". It will then use this instance by default to determine what feedback that should be given for a certain action."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This instance is used by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardFeedbackHandler"},{"type":"text","text":", which means that you can change the basic feedback behavior without having to create a custom feedback handler. However, more complex changes require a custom feedback handler."}]},{"anchor":"How-to-create-a-custom-handler","level":2,"type":"heading","text":"How to create a custom handler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Many keyboard actions have standard feedbacks, while others don’t and require custom handling. If your custom logic is more complicated than just configuring the settings as described above, you can implement a custom feedback handler."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom handler by either inheriting and customizing the standard class (which gives you a lot of functionality for free) or by creating a new implementation from scratch. When you’re implementation is ready, just replace the controller service with your own implementation to make the library use it instead."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, here is a custom feedback handler that extends "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardFeedbackHandler"},{"type":"text","text":" and trigger a string haptic feedback when the return button is long pressed:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardFeedbackHandler: StandardKeyboardFeedbackHandler {","    ","    override func triggerFeedback(for gesture: KeyboardGesture, on action: KeyboardAction) {","        if gesture == .longPress && action == .return {","            return HapticFeedback.heavyImpact.trigger()","        }","        super.triggerFeedback(for: gesture, on: action)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this implementation instead of the standard one, just replace the standard instance like this:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardViewController: KeyboardInputViewController {","","    override func viewDidLoad() {","        keyboardFeedbackHandler = MyKeyboardFeedbackHandler()","        super.viewDidLoad()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make KeyboardKit use your custom implementation everywhere instead of the standard one."}]},{"anchor":"How-to-trigger-feedback-without-a-handler","level":2,"type":"heading","text":"How to trigger feedback without a handler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You don’t need to use a feedback handler to trigger audio and haptic feedback, although that is the most flexible approach."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you just want to trigger audio or haptic feedback, KeyboardKit has other, more straightforward types as well:"}]},{"anchor":"System-audio","level":3,"type":"heading","text":"System audio"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit has a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemAudio"},{"type":"text","text":" enum that describes various system audio sounds."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can play any system audio sound with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemAudio\/play()"},{"type":"text","text":". You can also inject a new global "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemAudio\/player"},{"type":"text","text":" to customize how system audio is played."}]},{"anchor":"Haptic-feedback","level":3,"type":"heading","text":"Haptic feedback"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit has a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/HapticFeedback"},{"type":"text","text":" enum that describes various types of haptic feedback."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can trigger any haptic feedback with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/HapticFeedback\/trigger()"},{"type":"text","text":". You can also inject a new global "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/HapticFeedback\/player"},{"type":"text","text":" to customize how haptic feedback is triggered."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/understanding-keyboard-feedback"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Feedback","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback model and how to use it."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Understanding Keyboard Feedback","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Going-Further","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Actions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Appearance","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Input-Sets","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Layout","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete"],"generated":true}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/SystemAudio":{"role":"symbol","title":"SystemAudio","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemAudio"}],"abstract":[{"type":"text","text":"This enum contains various system audio types."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemAudio","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemAudio"}],"url":"\/documentation\/keyboardkit\/systemaudio"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardAppearance":{"role":"symbol","title":"KeyboardAppearance","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardAppearance"}],"abstract":[{"type":"text","text":"This protocol can be implemented by classes that can define"},{"type":"text","text":" "},{"type":"text","text":"styles and appearances for different parts of a keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardAppearance","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardAppearance"}],"url":"\/documentation\/keyboardkit\/keyboardappearance"},"doc://KeyboardKit/documentation/KeyboardKit/HapticFeedback/player":{"role":"symbol","title":"player","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"player"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StandardHapticFeedbackPlayer","preciseIdentifier":"s:11KeyboardKit28StandardHapticFeedbackPlayerC"}],"abstract":[],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/HapticFeedback\/player","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/hapticfeedback\/player"},"doc://KeyboardKit/documentation/KeyboardKit/SystemAudio/play()":{"role":"symbol","title":"play()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"play"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Play the system audio, using the shared audio player."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemAudio\/play()","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/systemaudio\/play()"},"doc://KeyboardKit/documentation/KeyboardKit/HapticFeedback/trigger()":{"role":"symbol","title":"trigger()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trigger"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Trigger the haptic feedback, using the shared player."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/HapticFeedback\/trigger()","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/hapticfeedback\/trigger()"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardFeedbackHandler":{"role":"symbol","title":"keyboardFeedbackHandler","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardFeedbackHandler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardFeedbackHandler","preciseIdentifier":"s:11KeyboardKit0A15FeedbackHandlerP"}],"abstract":[{"type":"text","text":"This feedback handler is used to setup audio and haptic"},{"type":"text","text":" "},{"type":"text","text":"feedback when the keyboard is being used."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardFeedbackHandler","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardfeedbackhandler"},"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"role":"article","title":"Getting started","abstract":[{"type":"text","text":"This article discusses how to install KeyboardKit and get started using it in your app."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/getting-started"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Appearance":{"role":"article","title":"Understanding Keyboard Appearance","abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Appearance","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-appearance"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardFeedbackSettings":{"role":"symbol","title":"KeyboardFeedbackSettings","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardFeedbackSettings"}],"abstract":[{"type":"text","text":"This class can be used to specify what kind of feedback the"},{"type":"text","text":" "},{"type":"text","text":"current keyboard should give to the user."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardFeedbackSettings","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardFeedbackSettings"}],"url":"\/documentation\/keyboardkit\/keyboardfeedbacksettings"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Localization":{"role":"article","title":"Understanding Keyboard Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-localization"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Input-Sets":{"role":"article","title":"Understanding Keyboard Input Sets","abstract":[{"type":"text","text":"This article describes the KeyboardKit input set concept and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Input-Sets","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-input-sets"},"doc://KeyboardKit/documentation/KeyboardKit/HapticFeedback":{"role":"symbol","title":"HapticFeedback","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HapticFeedback"}],"abstract":[{"type":"text","text":"This enum contains various haptic feedback types."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/HapticFeedback","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HapticFeedback"}],"url":"\/documentation\/keyboardkit\/hapticfeedback"},"doc://KeyboardKit/documentation/KeyboardKit/SystemAudio/player":{"role":"symbol","title":"player","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"player"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StandardSystemAudioPlayer","preciseIdentifier":"s:11KeyboardKit25StandardSystemAudioPlayerC"}],"abstract":[],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemAudio\/player","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/systemaudio\/player"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardFeedbackHandler":{"role":"symbol","title":"StandardKeyboardFeedbackHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardKeyboardFeedbackHandler"}],"abstract":[{"type":"text","text":"This feedback handler is used by default by KeyboardKit and"},{"type":"text","text":" "},{"type":"text","text":"can trigger audio and haptic feeeback."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardFeedbackHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardFeedbackHandler"}],"url":"\/documentation\/keyboardkit\/standardkeyboardfeedbackhandler"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/Going-Further":{"role":"article","title":"Going Further","abstract":[{"type":"text","text":"This article discusses how to configure KeyboardKit and add your own logic to the mix."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Going-Further","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/going-further"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Autocomplete":{"role":"article","title":"Understanding Autocomplete","abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-autocomplete"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardActionHandler":{"role":"symbol","title":"StandardKeyboardActionHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardKeyboardActionHandler"}],"abstract":[{"type":"text","text":"This standard keyboard action handler is used by default by"},{"type":"text","text":" "},{"type":"text","text":"KeyboardKit and provides a standard way of handling actions."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardActionHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardActionHandler"}],"url":"\/documentation\/keyboardkit\/standardkeyboardactionhandler"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Actions":{"role":"article","title":"Understanding Keyboard Actions","abstract":[{"type":"text","text":"This article describes keyboard actions and how to use action handlers."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Actions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-actions"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Layout":{"role":"article","title":"Understanding Keyboard Layouts","abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout concept and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Layout","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-layout"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardFeedbackSettings":{"role":"symbol","title":"keyboardFeedbackSettings","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardFeedbackSettings"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardFeedbackSettings","preciseIdentifier":"s:11KeyboardKit0A16FeedbackSettingsC"}],"abstract":[{"type":"text","text":"The default, observable feedback settings."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardFeedbackSettings","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardfeedbacksettings"}}}