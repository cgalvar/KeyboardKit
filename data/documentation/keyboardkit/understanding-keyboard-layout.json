{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Keyboard-layout","level":2,"type":"heading","text":"Keyboard layout"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In KeyboardKit, a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayout"},{"type":"text","text":" defines all available keyboard actions on a keyboard, as well as their size."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A keyboard layout most often consists of several input rows where the input buttons are surrounded by system buttons on either or both sides, as well as a bottom row with a space button and several system buttons."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Input sets and keyboard layouts are central components when creating a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"type":"text","text":", where flexibility and configurability is important features. If you want to create a custom keyboard, you don’t have to use these concepts."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most flexible way to generate a keyboard layout is with a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayoutProvider"},{"type":"text","text":"."}]},{"anchor":"Keyboard-layout-provider","level":2,"type":"heading","text":"Keyboard layout provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit will create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider"},{"type":"text","text":" when the keyboard extension is started and then apply it to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardLayoutProvider"},{"type":"text","text":" then use this instance by default to generate keyboard layouts."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit comes with a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider"},{"type":"text","text":", which can be initialized with an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetProvider"},{"type":"text","text":", then uses separate layout providers for iPhone and iPad."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit also has an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboardLayoutProvider"},{"type":"text","text":", which can be used as a general base class for creating layouts. It provides a bunch of utilities that makes this task easier."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit Pro can be used to unlock an input set provider for each "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale"},{"type":"text","text":". This means that you can create a completely localized "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard"},{"type":"text","text":" for all available locales with just a single line of code."}]},{"anchor":"Device-specific-layout-providers","level":2,"type":"heading","text":"Device specific layout providers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When creating system keyboards, the keyboard layout can vary depending on the device type."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyboardKit has "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/iPhoneKeyboardLayoutProvider"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/iPadKeyboardLayoutProvider"},{"type":"text","text":" base classes that you can base your custom, device-specific layouts on."}]},{"anchor":"How-to-create-a-custom-input-set-provider","level":2,"type":"heading","text":"How to create a custom input set provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you don’t have a KeyboardKit Pro license, you can create a custom layout provider."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can create a custom implementation of this protocol, by either inheriting and customizing the standard class (which gives you a lot of functionality for free) or by creating a new implementation from scratch. When you’re implementation is ready, just replace the controller service with your own implementation to make the library use it instead."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, here is a custom provider that extends "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider"},{"type":"text","text":" and injects a tab key to the top-leading part of the keyboard:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardLayoutProvider: StandardKeyboardLayoutProvider {","    ","    override func keyboardLayout(for context: KeyboardContext) -> KeyboardLayout {","        let layout = super.keyboardLayout(for: context)","        var rows = layout.itemRows","        var row = layout.itemRows[0]","        let next = row[0]","        let size = KeyboardLayoutItemSize(width: .available, height: next.size.height)","        let tab = KeyboardLayoutItem(action: .tab, size: size, insets: next.insets)","        row.insert(tab, at: 0)","        rows[0] = row","        layout.itemRows = rows","        return layout","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this implementation instead of the standard one, just replace the standard instance like this:"}]},{"type":"codeListing","syntax":"swift","code":["class MyKeyboardViewController: KeyboardInputViewController {","","    override func viewDidLoad() {","        keyboardLayoutProvider = MyKeyboardLayoutProvider()","        super.viewDidLoad()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will make KeyboardKit use your custom implementation everywhere instead of the standard one."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/keyboardkit\/understanding-keyboard-layout"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Layout","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article describes the KeyboardKit keyboard layout concept and how to use it."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Understanding Keyboard Layouts","role":"article","modules":[{"name":"KeyboardKit"}]},"hierarchy":{"paths":[["doc:\/\/KeyboardKit\/documentation\/KeyboardKit"]]},"seeAlsoSections":[{"title":"Articles","identifiers":["doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Going-Further","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Actions","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Appearance","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Feedback","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Input-Sets","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Localization","doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete"],"generated":true}],"references":{"doc://KeyboardKit/documentation/KeyboardKit/KeyboardLayout":{"role":"symbol","title":"KeyboardLayout","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardLayout"}],"abstract":[{"type":"text","text":"A keyboard layout defines all available keyboard actions on"},{"type":"text","text":" "},{"type":"text","text":"a keyboard, as well as their size."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayout","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardLayout"}],"url":"\/documentation\/keyboardkit\/keyboardlayout"},"doc://KeyboardKit/documentation/KeyboardKit/InputSetProvider":{"role":"symbol","title":"InputSetProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputSetProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any classes that can be"},{"type":"text","text":" "},{"type":"text","text":"used to provide "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSet"},{"type":"text","text":" values for keyboard layouts."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSetProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InputSetProvider"}],"url":"\/documentation\/keyboardkit\/inputsetprovider"},"doc://KeyboardKit/documentation/KeyboardKit/SystemKeyboardLayoutProvider":{"role":"symbol","title":"SystemKeyboardLayoutProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemKeyboardLayoutProvider"}],"abstract":[{"type":"text","text":"This class can be inherited by any keyboard layout provider"},{"type":"text","text":" "},{"type":"text","text":"that needs basic functionality for creating system keyboard"},{"type":"text","text":" "},{"type":"text","text":"layouts that depend on system-specific rules."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboardLayoutProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemKeyboardLayoutProvider"}],"url":"\/documentation\/keyboardkit\/systemkeyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit/SystemKeyboard":{"role":"symbol","title":"SystemKeyboard","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SystemKeyboard"}],"abstract":[{"type":"text","text":"This view mimics native iOS system keyboards, like standard"},{"type":"text","text":" "},{"type":"text","text":"alphabetic, numeric and symbolic system keyboards."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/SystemKeyboard","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SystemKeyboard"}],"url":"\/documentation\/keyboardkit\/systemkeyboard"},"doc://KeyboardKit/documentation/KeyboardKit/StandardKeyboardLayoutProvider":{"role":"symbol","title":"StandardKeyboardLayoutProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StandardKeyboardLayoutProvider"}],"abstract":[{"type":"text","text":"This keyboard layout provider bases its layout decisions on"},{"type":"text","text":" "},{"type":"text","text":"the type of device used. It will toggle between an "},{"type":"codeVoice","code":"iPhone"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"iPad"},{"type":"text","text":" specific layout provider."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/StandardKeyboardLayoutProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StandardKeyboardLayoutProvider"}],"url":"\/documentation\/keyboardkit\/standardkeyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit":{"role":"collection","title":"KeyboardKit","abstract":[{"type":"text","text":"KeyboardKit helps you build custom keyboards with Swift and SwiftUI."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardLayoutProvider":{"role":"symbol","title":"KeyboardLayoutProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardLayoutProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by any classes that can be"},{"type":"text","text":" "},{"type":"text","text":"used to generate a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayout"},{"type":"text","text":" for a certain context."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLayoutProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardLayoutProvider"}],"url":"\/documentation\/keyboardkit\/keyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Actions":{"role":"article","title":"Understanding Keyboard Actions","abstract":[{"type":"text","text":"This article describes keyboard actions and how to use action handlers."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Actions","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-actions"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Appearance":{"role":"article","title":"Understanding Keyboard Appearance","abstract":[{"type":"text","text":"This article describes the KeyboardKit appearance model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Appearance","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-appearance"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Feedback":{"role":"article","title":"Understanding Keyboard Feedback","abstract":[{"type":"text","text":"This article describes the KeyboardKit feedback model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Feedback","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-feedback"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardLayoutProvider":{"role":"symbol","title":"keyboardLayoutProvider","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardLayoutProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardLayoutProvider","preciseIdentifier":"s:11KeyboardKit0A14LayoutProviderP"}],"abstract":[{"type":"text","text":"This provider is used to get a complete keyboard layout"},{"type":"text","text":" "},{"type":"text","text":"for the current "},{"type":"reference","isActive":true,"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardContext"},{"type":"text","text":". This layout is the"},{"type":"text","text":" "},{"type":"text","text":"complete set of keys in a keyboard."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardLayoutProvider","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Input-Sets":{"role":"article","title":"Understanding Keyboard Input Sets","abstract":[{"type":"text","text":"This article describes the KeyboardKit input set concept and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Input-Sets","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-input-sets"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Keyboard-Localization":{"role":"article","title":"Understanding Keyboard Localization","abstract":[{"type":"text","text":"This article describes the KeyboardKit localization model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Keyboard-Localization","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-keyboard-localization"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardLocale":{"role":"symbol","title":"KeyboardLocale","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyboardLocale"}],"abstract":[{"type":"text","text":"This enum contains KeyboardKit-supported locales."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardLocale","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyboardLocale"}],"url":"\/documentation\/keyboardkit\/keyboardlocale"},"doc://KeyboardKit/documentation/KeyboardKit/iPhoneKeyboardLayoutProvider":{"role":"symbol","title":"iPhoneKeyboardLayoutProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"iPhoneKeyboardLayoutProvider"}],"abstract":[{"type":"text","text":"This class provides a keyboard layout that correspond to an"},{"type":"text","text":" "},{"type":"text","text":"iPhone with either a home button or notch."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/iPhoneKeyboardLayoutProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"iPhoneKeyboardLayoutProvider"}],"url":"\/documentation\/keyboardkit\/iphonekeyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit/KeyboardInputViewController/keyboardContext":{"role":"symbol","title":"keyboardContext","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyboardContext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyboardContext","preciseIdentifier":"s:11KeyboardKit0A7ContextC"}],"abstract":[{"type":"text","text":"The default, observable keyboard context."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/KeyboardInputViewController\/keyboardContext","kind":"symbol","type":"topic","url":"\/documentation\/keyboardkit\/keyboardinputviewcontroller\/keyboardcontext"},"doc://KeyboardKit/documentation/KeyboardKit/Understanding-Autocomplete":{"role":"article","title":"Understanding Autocomplete","abstract":[{"type":"text","text":"This article describes the KeyboardKit autocomplete model and how to use it."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Understanding-Autocomplete","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/understanding-autocomplete"},"doc://KeyboardKit/documentation/KeyboardKit/InputSet":{"role":"symbol","title":"InputSet","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputSet"}],"abstract":[{"type":"text","text":"An input set defines the input keys on a keyboard. The keys"},{"type":"text","text":" "},{"type":"text","text":"can then be used to create a keyboard layout, which defines"},{"type":"text","text":" "},{"type":"text","text":"the full set of keys, including the surrounding system keys."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/InputSet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InputSet"}],"url":"\/documentation\/keyboardkit\/inputset"},"doc://KeyboardKit/documentation/KeyboardKit/Going-Further":{"role":"article","title":"Going Further","abstract":[{"type":"text","text":"This article discusses how to configure KeyboardKit and add your own logic to the mix."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Going-Further","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/going-further"},"doc://KeyboardKit/documentation/KeyboardKit/iPadKeyboardLayoutProvider":{"role":"symbol","title":"iPadKeyboardLayoutProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"iPadKeyboardLayoutProvider"}],"abstract":[{"type":"text","text":"This class provides a keyboard layout that correspond to an"},{"type":"text","text":" "},{"type":"text","text":"iPad with a home button."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/iPadKeyboardLayoutProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"iPadKeyboardLayoutProvider"}],"url":"\/documentation\/keyboardkit\/ipadkeyboardlayoutprovider"},"doc://KeyboardKit/documentation/KeyboardKit/Getting-Started":{"role":"article","title":"Getting started","abstract":[{"type":"text","text":"This article discusses how to install KeyboardKit and get started using it in your app."}],"identifier":"doc:\/\/KeyboardKit\/documentation\/KeyboardKit\/Getting-Started","kind":"article","type":"topic","url":"\/documentation\/keyboardkit\/getting-started"}}}